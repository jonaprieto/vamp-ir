name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        default: "draft"
        options:
          - "draft"
          - "release"
      tag:
        description: "version to release"
        required: true
        default: "v0.0.0"
  push:
    branches:
      - main

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  # create-release:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: Create a draft release
  #       uses: taiki-e/create-gh-release-action@v1
  #       with:
  #         changelog: CHANGELOG.md
  #         branch: main
  #         # ref: refs/tags/${{ github.event.inputs.tag }}
  #         draft: ${{ github.event.inputs.release-type == 'pre-release' }}
  #         token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    strategy:
      matrix:
        include:
          # Linux targets
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          # macOS targets
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: universal-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.4.0

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          override: true
          components: rustfmt, rust-std
          # https://rust-lang.github.io/rustup-components-history/

    #   - name: Lint
    #     run: |
    #       cargo fmt --all -- --check
    #       cargo clippy

      - name: Show rust toolchain info
        run: rustup show

      - name: Run tests
        run: cargo test

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
