name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        default: "pre-release"
        options:
          - "pre-release"
          - "release"
      tag:
        description: "version to release"
        required: true
        default: "v0.0.0"

  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-[a-z]+"

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt
      - name: Show rust toolchain info
        run: rustup show

      - name: Show rustup
        run: rustup toolchain install stable --profile minimal

      - run: cargo build

      - name: Create a draft release
        uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          branch: main
          draft: ${{ github.event.inputs.release-type == 'pre-release' }}
          title: ${{ github.event.inputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            build_tool: cargo
          - target: aarch64-apple-darwin
            os: macos-latest
            build_tool: cargo
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            build_tool: cargo
          - target: x86_64-apple-darwin
            os: macos-latest
            build_tool: cargo
          - target: universal-apple-darwin
            os: macos-latest
            build_tool: cargo
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: vamp-ir
          target: ${{ matrix.target }}
          include: LICENSE-APACHE,LICENSE-MIT,README.md
          token: ${{ secrets.GITHUB_TOKEN }}
